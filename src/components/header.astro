---
import { Icon } from "astro-icon";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import type { NavItem } from "~/types";
import Navbutton from "./Atoms/navbutton.astro";
import Hamburger from "./Atoms/hamburger.astro";
import Search from "./Atoms/search.astro";
import Logo from "./Atoms/logo.astro";
import W4logo from "./Atoms/w4logo.astro";

const navItems: Array<NavItem> = [
  { title: "Community", url: "#community" },
  { title: "Enterprise", url: "#developer" },
  { title: "Developer", url: "#showcase" }, 
  { title: "Research", url: "#showcase" }, 
];
---

<header
  id="page-header"
  class="absolute bottom z-20 flex w-full items-center lg:justify-between border-transparent px-8 py-2 text-white fixed-header"
>
  <a class="flex items-center gap-3 sm:gap-2 font-grotesk" href="">
    <!-- <h1 class="sr-only">AstroXX</h1>
    <Icon name="logomark" class="h-10" />
    <Icon name="wordmark" class="hidden h-4 sm:block" /> -->
    <Logo />
      <!-- <div class="sm:hidden">
        <Logo />
      </div>
      <div class="hidden sm:block">
        <a>kdfo</a>
        <Smlogo />
      </div> -->
  </a>
  <div class="hidden translate-x-[20px] w-[700px] lg:block">
    <Navbutton text="Community" />
    <Navbutton text="Enterprise" />
    <Navbutton text="Developers" />
    <Navbutton text="Research" />
    
  </div>

  <!-- <div class="translate-x-[100px]">
    <Search />
  </div> -->
  
    <div class="flex items-center md:px-[540px]">
      <!-- <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav> -->
      
      <div class="translate-x-[10px] gap-1 sm:translate-x-[10px]">
        <Search />
      </div>
      <div class="w-20 flex translate-x-[30px] sm:translate-x-[0px] items-center gap-6">
        <ThemeSwitcher />
        <button
          id="open-nav-button"
          type="button"
          class="btn lg:hidden"
          aria-label="Navigation"
        >
          
          <Icon name="mdi:menu" class="h-8" />
          <!-- <svg name="menu" class="h-10 bg-dark" width="44" height="44" viewBox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="10" y="14" width="12" height="2.5" rx="1" />
          <rect x="10" y="21" width="24" height="2.5" rx="1" fill="black"/>
          <rect x="22" y="28" width="12" height="2.5" rx="1" fill="black"/>
          </svg>
          
          <div data-theme="light">
           <svg name="menu" class="h-10 bg-light" width="44" height="44" viewBox="0 0 44 44" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="10" y="14" width="12" height="2.5" rx="1" fill="white"/>
          <rect x="10" y="21" width="24" height="2.5" rx="1" fill="white"/>
          <rect x="22" y="28" width="12" height="2.5" rx="1" fill="white"/>
          </svg>
          </div> -->

        </button>
      </div>
 

    
    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="bg-default fixed inset-0 px-8 py-4">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button
              id="close-nav-button"
              type="button"
              class="btn"
              aria-label="Close navigation"
            >
              <Icon pack="mdi" name="close" class="h-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <!-- <Icon name="logomark" class="h-16" /> -->
            <W4logo />
          </div>
          <nav>
            <ul class="flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <li>
                    <a class="block py-4 text-center text-xl" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    MicroModal.show(menuModalId, { disableScroll: true });
  };

  const closeMenu = () => {
    MicroModal.close(menuModalId);
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    // header.classList.toggle("fixed-header", d < 0);
  });

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });
</script>

<noscript>
  <style>
    #open-nav-button {
      display: none;
    }
  </style>
</noscript>

<style>
  .fixed-header {
    @apply fixed top-0 bottom-auto;
    @apply border-default bg-default text-default font-grotesk;
  }
  .modal.is-open {
    @apply block;
  }
</style>
